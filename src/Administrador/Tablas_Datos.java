/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Administrador;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import Repositorio.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
/**
 *
 * @author Clint
 */
public class Tablas_Datos extends javax.swing.JPanel {

    private Usuarios persona;
   
    private DefaultTableModel table_model,table_model2,table_model3;
   
    
    /**
     * Creates new form Tablas_Datos
     */
    public Tablas_Datos() {
        initComponents();
    }

    public void setTableModel(DefaultTableModel table_model){
        this.table_model = table_model;
        System.out.println("entre a settablemodel");
    }
    
    public void setTableModel2(DefaultTableModel table_model){
        this.table_model2 = table_model;
        System.out.println("entre a settablemodel");
    }
    
    public void setTableModel3(DefaultTableModel table_model){
        this.table_model3 = table_model;
        System.out.println("entre a settablemodel");
    }
    
    public void refreshTableModel()
    {
        ArrayList<Usuarios> lista_personas = repositorio.obtenerTodos2();
        while (table_model.getRowCount() > 0) {
            table_model.removeRow(0);
        }
        
        for(Usuarios p : lista_personas)
        {
            String[] data = {p.getNombre(),p.getApellido(),Integer.toString(p.getEdad())};
            table_model.addRow(data);
            System.out.println("entre a refresh");
        }
    }  
    
    public void refreshTableModel2()
    {
        ArrayList<Usuarios> lista_personas = repositorio.obtenerTodos3();
        while (table_model2.getRowCount() > 0) {
            table_model2.removeRow(0);
        }
        
        for(Usuarios p : lista_personas)
        {
            String[] data = {p.getNombre(),p.getApellido(),Integer.toString(p.getEdad()),p.getCedula()};
            table_model2.addRow(data);
            System.out.println("entre a refresh");
        }
    }
    
    
    public void refreshTableModel3()
    {
        ArrayList<Usuarios> lista_personas = repositorio.obtenerTodos4();
        while (table_model3.getRowCount() > 0) {
            table_model3.removeRow(0);
        }
        
        for(Usuarios p : lista_personas)
        {
            String[] data = {p.getNombre(),p.getApellido(),Integer.toString(p.getEdad()),p.getCedula()};
            table_model3.addRow(data);
            System.out.println("entre a refresh");
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actualizar = new javax.swing.JButton();

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(actualizar)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(actualizar)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
       
       this.setVisible(false);
       Inicio i = new Inicio();
       i.setVisible(true);
      
    }//GEN-LAST:event_actualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    // End of variables declaration//GEN-END:variables
}
